datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model TrainingTag {
  name     String     @id
  training Training[]
}

enum BallType {
  CUE_BALL
  COLORED_BALL
  NUMBERED_BALL
}

enum BallColor {
  YELLOW
  RED
}

model Ball {
  id              Int              @id @default(autoincrement())
  type            BallType
  color           BallColor?
  number          Int?
  positionedBalls PositionedBall[]
}

model PositionedBall {
  id       Int    @id @default(autoincrement())
  row      Int
  column   Int
  ball     Ball   @relation(fields: [ballId], references: [id], onDelete: Cascade)
  ballId   Int
  layout   Layout @relation(fields: [layoutId], references: [id], onDelete: Cascade)
  layoutId Int
}

model Layout {
  id              Int              @id @default(autoincrement())
  gridRowLevel    Int
  gridColumnLevel Int
  balls           PositionedBall[]
  trainingBloc    TrainingBloc     @relation(fields: [trainingBlocId], references: [id], onDelete: Cascade)
  trainingBlocId  Int              @unique
}

enum TrainingBlocType {
  TABLE_LAYOUT
  RICH_TEXT
}

model TrainingBloc {
  id         Int              @id @default(autoincrement())
  type       TrainingBlocType
  title      String           @unique
  text       String?
  layout     Layout?
  training   Training         @relation(fields: [trainingId], references: [id], onDelete: Cascade)
  trainingId Int
}

model Training {
  id    Int            @id @default(autoincrement())
  name  String         @unique
  tags  TrainingTag[]
  blocs TrainingBloc[]
}
